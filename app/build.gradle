plugins {
    id 'com.android.application'
    id 'com.google.gms.google-services'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'
}


android {
    compileSdkVersion 32
    defaultConfig {
        applicationId "netdesigntool.com.eunions"
        minSdkVersion 21
        targetSdkVersion 32
        versionCode 9
        versionName '1.3'
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        multiDexEnabled true
        resConfigs 'en', 'ru'

        // to generate json file with db schema for each db version
        javaCompileOptions {
            annotationProcessorOptions {
                arguments += ["room.schemaLocation": "$projectDir/schemas".toString()]
            }
        }
    }

    signingConfigs {
        release
    }


    buildTypes {
        release {
            minifyEnabled true
            debuggable false
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }

        debug {
            //useProguard false
            def suffix

            if ("Linux" == System.getProperty("os.name")) {
                suffix= ".linux.debug"
            } else {
                suffix= ".debug"
            }
            applicationIdSuffix suffix
            println("added sufix: "+ suffix)
        }

        buildFeatures {
            viewBinding true
            compose true
        }
    }

    compileOptions {
        targetCompatibility JavaVersion.VERSION_1_8
        sourceCompatibility JavaVersion.VERSION_1_8
    }

    packagingOptions {
        resources {
            excludes += ['META-INF/DEPENDENCIES']
        }
    }

    composeOptions {
        kotlinCompilerExtensionVersion="1.2.0-alpha08"
    }

    testOptions {
        unitTests {
            includeAndroidResources = true
        }
    }

    lint {
        abortOnError false
    }
}

tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).configureEach {
    kotlinOptions {
        jvmTarget = "1.8"
        //freeCompilerArgs += "-Xopt-in=io.ktor.util.KtorExperimentalAPI"
        freeCompilerArgs += "-opt-in=kotlin.RequiresOptIn"
        freeCompilerArgs += "-opt-in=org.mylibrary.OptInAnnotation"

        // For resolve error: Compose Compiler requires XXX Kotlin version
        freeCompilerArgs += "-P"
        freeCompilerArgs += "plugin:androidx.compose.compiler.plugins.kotlin:suppressKotlinVersionCompatibilityCheck=true"
    }
}

//Prevent Error: DuplicatePlatformClasses
configurations {
    all {
        exclude module: 'httpclient'
    }
}



configurations.all {
    resolutionStrategy.dependencySubstitution {
        substitute module('org.hamcrest:hamcrest-core') using module('org.hamcrest:hamcrest:2.1')
        substitute module('org.hamcrest:hamcrest-library') using module('org.hamcrest:hamcrest:2.1')
    }
}

// For JUnit5 only
//tasks.withType(Test) {
//    useJUnitPlatform()
//}


dependencies {

    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation 'androidx.appcompat:appcompat:1.4.1'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.3'
    //
    implementation 'androidx.recyclerview:recyclerview:1.2.1'
    implementation 'com.google.android.material:material:1.5.0'
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.4.1'
    implementation 'com.google.android.flexbox:flexbox:3.0.0'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'

    implementation 'androidx.annotation:annotation-experimental:1.2.0'

    def compose_version = '1.1.1'
    implementation "androidx.compose.ui:ui:$compose_version"
    implementation "androidx.compose.ui:ui-tooling-preview:$compose_version"


    def lifeCycleVer = '2.4.1'
    //noinspection KtxExtensionAvailable
    implementation "androidx.lifecycle:lifecycle-viewmodel:$lifeCycleVer"
    implementation "androidx.lifecycle:lifecycle-common-java8:$lifeCycleVer"


    //              wiki data
    def wiki = 'org.wikidata.wdtk'
    def wikiVer = '0.11.1'
    implementation "$wiki:wdtk-wikibaseapi:$wikiVer"
    implementation "$wiki:wdtk-datamodel:$wikiVer"
    implementation 'org.slf4j:slf4j-log4j12:1.8.0-beta4'

    //              Retrofit
    def retrofit = 'com.squareup.retrofit2'
    def retrofitVer = '2.9.0'
    implementation "$retrofit:retrofit:$retrofitVer"
    //implementation "$retrofit:converter-gson:$retrofitVer"
    implementation "$retrofit:converter-moshi:$retrofitVer"
    implementation "$retrofit:adapter-rxjava2:$retrofitVer"
    implementation 'com.squareup.okhttp3:logging-interceptor:4.9.3'

    //              Kotlin coroutines
    def coroutinesVer = '1.6.1'
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutinesVer"


    //              RxJava
    implementation 'io.reactivex.rxjava2:rxjava:2.2.21'
    implementation 'io.reactivex.rxjava2:rxandroid:2.1.1'

    //              AboutActivity
    implementation 'com.github.biagiopietro:AboutActivity:1.4'


    //              Firebase
    // Import the BoM for the Firebase platform
    implementation platform('com.google.firebase:firebase-bom:29.0.2')

    // Declare the dependencies for the desired Firebase products without specifying versions
    // When using the BoM, you don't specify versions in Firebase library dependencies
    implementation 'com.google.firebase:firebase-database-ktx'
    implementation 'com.google.firebase:firebase-appcheck-safetynet:16.0.0-beta06'
    // ===================================================================


    // MPAndroid charts
    implementation 'com.github.PhilJay:MPAndroidChart:v3.1.0'

    //   =============== Jetpack Compose ====================
    implementation "androidx.compose.compiler:compiler:1.2.0-alpha08"
    // Integration with activities
    implementation 'androidx.activity:activity-compose:1.4.0'
    // Compose Material Design
    implementation 'androidx.compose.material:material:1.1.1'
    // Animations
    //implementation 'androidx.compose.animation:animation:1.0.5'
    // Tooling support (Previews, etc.)
    implementation 'androidx.compose.ui:ui-tooling:1.1.1'
    // Integration with ViewModels
    implementation 'androidx.lifecycle:lifecycle-viewmodel-compose:2.5.0-beta01'
    implementation "com.google.accompanist:accompanist-appcompat-theme:0.16.0"
    // UI Tests
    //androidTestImplementation 'androidx.compose.ui:ui-test-junit4:1.0.5'


    //          Paging
    implementation "androidx.paging:paging-runtime-ktx:3.1.1"
    implementation "androidx.paging:paging-compose:1.0.0-alpha14"

    //          Hilt
    def hilt_ver = '2.41'
    implementation "com.google.dagger:hilt-android:$hilt_ver"
    kapt "com.google.dagger:hilt-compiler:$hilt_ver"

    //          Room
    def room_version = "2.4.2"
    implementation "androidx.room:room-runtime:$room_version"
    kapt "androidx.room:room-compiler:$room_version"
    implementation "androidx.room:room-ktx:$room_version"
    implementation "androidx.room:room-paging:$room_version"


    //   Test
    testImplementation 'junit:junit:4.13.2'
    testImplementation "android.arch.core:core-testing:1.1.1"
    //testImplementation 'androidx.test:core:1.4.0'
    testImplementation 'org.mockito:mockito-inline:4.5.0'
    testImplementation "org.mockito.kotlin:mockito-kotlin:4.0.0"
    testImplementation 'org.robolectric:robolectric:4.7.3'
    testImplementation 'org.awaitility:awaitility:4.2.0'
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutinesVer"

    
    //    AndroidTest
    androidTestImplementation 'androidx.test:runner:1.4.0'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test:rules:1.4.0'
    //androidTestImplementation 'androidx.test.espresso:espresso-intents:3.4.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
    androidTestImplementation 'org.awaitility:awaitility:4.2.0'
    androidTestImplementation "androidx.compose.ui:ui-test-junit4:$compose_version"

    // *** Hilt ***
    /*
    // For instrumentation tests
    androidTestImplementation  "com.google.dagger:hilt-android-testing:${hilt_ver}"
    androidTestAnnotationProcessor "com.google.dagger:hilt-compiler:${hilt_ver}"

    // For local unit tests
    testImplementation "com.google.dagger:hilt-android-testing:${hilt_ver}"
    testAnnotationProcessor "com.google.dagger:hilt-compiler:${hilt_ver}"*/

}

//  For using Hilt with Kotlin
kapt {
    correctErrorTypes true
}